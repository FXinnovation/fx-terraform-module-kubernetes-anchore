---
apiVersion: v1
data:
  config.yaml: "# Anchore Service Configuration File from ConfigMap\nservice_dir:
    /anchore_service\ntmp_dir: /analysis_scratch\nlog_level: INFO\nimage_analyze_timeout_seconds:
    36000\ncleanup_images: true\nallow_awsecr_iam_auto: false\nhost_id: \"${ANCHORE_POD_NAME}\"\ninternal_ssl_verify:
    false\nauto_restart_services: false\n\nglobal_client_connect_timeout: 0\nglobal_client_read_timeout:
    0\n\nmetrics:\n  enabled: false\n  auth_disabled: false\n\n# Configure what feeds
    to sync.\n# The sync will hit http://ancho.re/feeds, if any outbound firewall
    config needs to be set in your environment.\nfeeds:\n  sync_enabled: true\n  selective_sync:\n
    \   # If enabled only sync specific feeds instead of all that are found.\n    enabled:
    true\n    feeds:\n      github: true\n      # Vulnerabilities feed is the feed
    for distro cve sources (redhat, debian, ubuntu, oracle, alpine....)\n      vulnerabilities:
    true\n      # NVD Data is used for non-distro CVEs (jars, npm, etc) that are not
    packaged and released by distros as rpms, debs, etc\n      nvdv2: true\n      #
    Warning: enabling the package sync causes the service to require much\n      #
    \  more memory to do process the significant data volume. We recommend at least
    4GB available for the container\n      packages: false\n      # Enabling vulndb
    syncs vulndb vulnerability data from an on-premise anchore enterprise feeds service.
    Please contact\n      # anchore support for finding out more about this service\n
    \     vulndb: false\n      microsoft: false\n      # Sync github data if available
    for GHSA matches\n      github: true\n  client_url: \"https://ancho.re/v1/account/users\"\n
    \ token_url: \"https://ancho.re/oauth/token\"\n  anonymous_user_username: anon@ancho.re\n
    \ anonymous_user_password: pbiU2RYZ2XrmYQ\n  connection_timeout_seconds: 3\n  read_timeout_seconds:
    180\ndefault_admin_password: ${ANCHORE_ADMIN_PASSWORD}\ndefault_admin_email: example@email.com\n\n#
    Locations for keys used for signing and encryption. Only one of 'secret' or 'public_key_path'/'private_key_path'
    needs to be set. If all are set then the keys take precedence over the secret
    value\n# Secret is for a shared secret and if set, all components in anchore should
    have the exact same value in their configs.\nkeys:\n  secret: \n\n# Configuring
    supported user authentication and credential management\nuser_authentication:\n
    \ oauth:\n    enabled: false\n    default_token_expiration_seconds: 3600\n\n  #
    Set this to True to enable storing user passwords only as secure hashes in the
    db. This can dramatically increase CPU usage if you\n  # don't also use oauth
    and tokens for internal communications (which requires keys/secret to be configured
    as well)\n  # WARNING: you should not change this after a system has been initialized
    as it may cause a mismatch in existing passwords\n  hashed_passwords: false\n\ncredentials:\n
    \ database:\n    db_connect: \"postgresql://${ANCHORE_DB_USER}:${ANCHORE_DB_PASSWORD}@${ANCHORE_DB_HOST}/${ANCHORE_DB_NAME}\"\n
    \   db_connect_args:\n      timeout: 120\n      ssl: false\n    db_pool_size:
    30\n    db_pool_max_overflow: 100\nservices:\n  apiext:\n    enabled: true\n    require_auth:
    true\n    endpoint_hostname: anchore-demo-anchore-engine-api\n    max_request_threads:
    50\n    listen: 0.0.0.0\n    port: 8228\n  analyzer:\n    enabled: true\n    require_auth:
    true\n    endpoint_hostname: anchore-demo-anchore-engine-analyzer\n    listen:
    0.0.0.0\n    port: 8084\n    max_request_threads: 50\n    cycle_timer_seconds:
    1\n    cycle_timers:\n      image_analyzer: 5\n    max_threads: 1\n    analyzer_driver:
    'nodocker'\n    layer_cache_enable: false\n    layer_cache_max_gigabytes: 0\n
    \   enable_hints: false\n  catalog:\n    enabled: true\n    require_auth: true\n
    \   endpoint_hostname: anchore-demo-anchore-engine-catalog\n    listen: 0.0.0.0\n
    \   port: 8082\n    max_request_threads: 50\n    cycle_timer_seconds: 1\n    cycle_timers:\n
    \     # Interval to check for an update to a tag\n      image_watcher: 3600\n
    \     # Interval to run a policy evaluation on images with the policy_eval subscription
    activated.\n      policy_eval: 3600\n      # Interval to run a vulnerability scan
    on images with the vuln_update subscription activated.\n      vulnerability_scan:
    14400\n      # Interval at which the catalog looks for new work to put on the
    image analysis queue.\n      analyzer_queue: 1\n      # Interval notifications
    will be processed for state changes\n      notifications: 30\n      # Intervals
    service state updates are polled for the system status\n      service_watcher:
    15\n      # Interval between checks to repo for new tags\n      repo_watcher:
    60\n    event_log:\n      notification:\n        enabled: false\n        level:\n
    \       - error\n    archive:\n      compression:\n        enabled: true\n        min_size_kbytes:
    100\n      storage_driver:\n        config: {}\n        name: db\n  simplequeue:\n
    \   enabled: true\n    require_auth: true\n    endpoint_hostname: anchore-demo-anchore-engine-simplequeue\n
    \   listen: 0.0.0.0\n    port: 8083\n    max_request_threads: 50\n  policy_engine:\n
    \   enabled: true\n    require_auth: true\n    max_request_threads: 50\n    endpoint_hostname:
    anchore-demo-anchore-engine-policy\n    listen: 0.0.0.0\n    port: 8087\n    cycle_timer_seconds:
    1\n    cycle_timers:\n      feed_sync: 14400\n      feed_sync_checker: 3600\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: anchore-demo
    meta.helm.sh/release-namespace: default
  labels:
    app: anchore-demo-anchore-engine
    app.kubernetes.io/managed-by: Helm
    chart: anchore-engine-1.10.2
    heritage: Helm
    release: anchore-demo
  name: anchore-demo-anchore-engine
  namespace: default
---
apiVersion: v1
data:
  ANCHORE_DB_HOST: anchore-demo-postgresql:5432
  ANCHORE_DB_NAME: anchore
  ANCHORE_DB_USER: anchoreengine
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: anchore-demo
    meta.helm.sh/release-namespace: default
  labels:
    app: anchore-demo-anchore-engine
    app.kubernetes.io/managed-by: Helm
    chart: anchore-engine-1.10.2
    heritage: Helm
    release: anchore-demo
  name: anchore-demo-anchore-engine-env
  namespace: default
---
apiVersion: v1
data:
  ANCHORE_ADMIN_PASSWORD: Zm9vYmFy
  ANCHORE_DB_PASSWORD: YW5jaG9yZS1wb3N0Z3JlcywxMjM=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: anchore-demo
    meta.helm.sh/release-namespace: default
  labels:
    app: anchore-demo-anchore-engine
    app.kubernetes.io/managed-by: Helm
    chart: anchore-engine-1.10.2
    heritage: Helm
    release: anchore-demo
  name: anchore-demo-anchore-engine
  namespace: default
type: Opaque
